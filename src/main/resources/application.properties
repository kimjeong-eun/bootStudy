spring.application.name=board

##서버 포트 변경
server.port=80

##마리아 db 연결 4가지 항목(필수)
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/bootex
##spring.datasource.driver-class-name=org.postgresql.Driver
##spring.datasource.url=jdbc:postgresql://13.124.115.81:5432/webpjt
spring.datasource.username=bootuser 
spring.datasource.password=bootuser

# update : 변경 사항이 생기면 update
# create : 매번 새로 생성
# create-drop : 매번 삭제후 생성
# validate : 엔티티 클래스와 테이블이 정상적으로 매핑되는지만 검사한다. 만약 테이블이 아예 존재하지 않거나, 테이블에 엔티티의 필드에 매핑되는 컬럼이 존재하지 않으면 예외를 발생시키면서 애플리케이션을 종료한다
spring.jpa.hibernate.ddl-auto=update
# 실제 jpa의 구현체인 HiberNate가 동작하면서 발생하는 sql을 포멧팅해서 콘솔에 출력
#콘솔에 쿼리출력
spring.jpa.properties.hibernate.format_sql=true  
# 콘솔에 실행한 쿼리문(sql) 보여줄 것인지 결정
spring.jpa.show-sql=true

#타임 리프 캐싱 처리
spring.thymeleaf.cache=false

#spring.servlet.multipart.enabled :파일 업로드 기능 여부를 선택
#spring.servlet.multipart.location: 업로드된 파일의 임시 저장 경로
#spring.servlet.multipart.max-request-size : 한번에 최대 업로드 기능 용량
#spring.servlet.multipart.max-file-size :파일 하나의 최대 크기
spring.servlet.multipart.enabled=true 
spring.servlet.multipart.location=C:\\upload
spring.servlet.multipart.max-request-size=30MB
spring.servlet.multipart.max-file-size=10MB

## 파일 업로드 위치 경로  (@Value로 사용)
org.zerock.upload.path =C:\\upload

## 스프링 시큐리티에서 어떤 문제가 발생했는지 알 수 있도록 application.properties의 로그 설정을 최대한 낮게 설정한다
logging.level.org.springframework = info
logging.level.org.zerock = debug

logging.level.org.springframework.security=trace

## kakao oauth2
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect_uri=http://localhost:80/login/oauth2/code/kakao

## ???? -> REST API?
spring.security.oauth2.client.registration.kakao.client-id=ca1bd679e774166bd243648ac5be3f22
## ??? ??? -> ??
spring.security.oauth2.client.registration.kakao.client-secret=NRYfwBMdE1pkEWLWwX0Z27qVUEyDhTO2

## spring.security.oauth2.client.registration.kakao.client-authentication-method=POST 6???. 745p
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email